host-build-and-test:
  stage: build
  image: gabrielfrasantos/embedded-devcontainer:lastest@sha256:1e1ac37bf82565cf8676100c4380f2a372c6b581e0404ad449b35a9ce93856e5
  interruptible: true
  script:
    - cmake --preset=$target -S . -B build/$target
    - cmake --build build/$target --config RelWithDebInfo
    - ctest --test-dir build/host -C RelWithDebInfo --output-on-failure --stop-on-failure --no-tests=error
  artifacts:
    paths:
      - build/$target
    expire_in: 1 hours
    when: on_success
  parallel:
    matrix:
      - target: ["host"]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      when: always
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: always
    - when: never

coverage:
  stage: build
  image: gabrielfrasantos/embedded-devcontainer:lastest@sha256:1e1ac37bf82565cf8676100c4380f2a372c6b581e0404ad449b35a9ce93856e5
  interruptible: true
  script:
    - mkdir -p report
    - cmake --preset coverage -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
    - cmake --build --preset coverage
    - GTEST_OUTPUT="xml:${PWD}/build/coverage/" ctest --test-dir build/coverage --preset coverage
    - ctest --test-dir build/coverage --no-compress-output --output-junit $PWD/report/unit-test.xml
    - gcovr build/coverage --txt --json report/coverage.json --sonarqube report/coverage.xml --cobertura report/cobertura.xml --cobertura-pretty --html-details report/coverage-report.html --exclude-lines-by-pattern '.*assert\(.*\);|.*really_assert\(.*\);|.*std::abort();' --exclude-unreachable-branches --exclude-throw-branches -j "$(nproc)" --exclude=.*/examples/.* --exclude=.*/tracing/.* --exclude=.*/test/.* --exclude=.*/test_doubles/.* --exclude=.*/instantiations/.* --exclude=.*/_deps/.*
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: report/cobertura.xml
      junit: report/unit-test.xml
    paths:
      - report
    expire_in: 1 day
    when: on_success
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      when: always
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      when: always
    - when: never
# embedded-build-st:
#   stage: build
#   image: gabrielfrasantos/embedded-devcontainer:lastest@sha256:1e1ac37bf82565cf8676100c4380f2a372c6b581e0404ad449b35a9ce93856e5
#   interruptible: true
#   script:
#     - cmake --preset=$target -S . -B build/$target
#     - cmake --build build/$target --config Debug
#   artifacts:
#     paths:
#       - build/$target
#     expire_in: 1 hours
#     when: on_success
#   parallel:
#     matrix:
#       - target:
#           - stm32f407
#           - stm32f429
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
#       when: always
#     - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
#       when: always
#     - when: never
