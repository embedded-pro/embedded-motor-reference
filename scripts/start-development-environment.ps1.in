# Development Environment Setup Script
# This script starts JLink GDB Server and Tera Term for embedded development
# Generated by CMake - Do not edit this template directly

# Check if JLinkGDBServerCL.exe is available
$JLinkPath = Get-Command "JLinkGDBServerCL.exe" -ErrorAction SilentlyContinue
if (-not $JLinkPath) {
    Write-Error "JLinkGDBServerCL.exe not found in PATH. Please install J-Link software and ensure it's in your PATH."
    exit 1
}

# Check if Tera Term is installed in the expected location
$TeraTermPath = "C:\Program Files (x86)\teraterm\ttermpro.exe"
if (-not (Test-Path $TeraTermPath)) {
    Write-Error "Tera Term not found at '$TeraTermPath'. Please install Tera Term."
    exit 1
}

Write-Host "Starting JLink GDB Server..." -ForegroundColor Green
Write-Host "Target MCU: @TARGET_MCU_UPPER@" -ForegroundColor Cyan
Write-Host "GDB Port: @GDB_PORT@" -ForegroundColor Cyan
Write-Host "Telnet Port: 19021" -ForegroundColor Cyan

# Start JLink GDB Server in background
$JLinkArgs = @(
    "-device", "@TARGET_MCU_UPPER@",
    "-if", "SWD",
    "-speed", "auto",
    "-port", "@GDB_PORT@",
    "-singlerun",
    "-silent",
    "-nogui"
)

$JLinkProcess = Start-Process -FilePath "JLinkGDBServerCL.exe" -ArgumentList $JLinkArgs -PassThru -WindowStyle Minimized
Write-Host "JLink GDB Server started with PID: $($JLinkProcess.Id)" -ForegroundColor Green

# Wait 2 seconds before starting Tera Term
Write-Host "Waiting 2 seconds before starting Tera Term..." -ForegroundColor Yellow
Start-Sleep -Seconds 2

# Start Tera Term with telnet connection to port 19021
Write-Host "Starting Tera Term with telnet connection..." -ForegroundColor Green
$TeraTermArgs = @(
    "localhost:19021",
    "/T=1"  # Telnet connection
)

Start-Process -FilePath $TeraTermPath -ArgumentList $TeraTermArgs

Write-Host "Development environment setup complete!" -ForegroundColor Green
Write-Host "JLink GDB Server is running on port @GDB_PORT@" -ForegroundColor Cyan
Write-Host "Tera Term is connected to telnet port 19021" -ForegroundColor Cyan
Write-Host ""
Write-Host "To stop the JLink GDB Server, close this window or press Ctrl+C" -ForegroundColor Yellow

# Keep the script running so the JLink server stays active
try {
    Write-Host "Press Ctrl+C to stop the JLink GDB Server and exit..." -ForegroundColor Yellow
    while ($JLinkProcess -and -not $JLinkProcess.HasExited) {
        Start-Sleep -Seconds 1
    }

    if ($JLinkProcess.HasExited) {
        Write-Host "JLink GDB Server has exited." -ForegroundColor Red
    }
}
catch {
    Write-Host "Stopping JLink GDB Server..." -ForegroundColor Yellow
    if ($JLinkProcess -and -not $JLinkProcess.HasExited) {
        $JLinkProcess.Kill()
        Write-Host "JLink GDB Server stopped." -ForegroundColor Green
    }
}
