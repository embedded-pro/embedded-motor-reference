# Development Environment Setup Script
# This script starts JLink GDB Server and JLink RTT Viewer for embedded development
# Generated by CMake - Do not edit this template directly

# Check if JLinkGDBServerCL.exe is available
$JLinkPath = Get-Command "JLinkGDBServerCL.exe" -ErrorAction SilentlyContinue
if (-not $JLinkPath) {
    Write-Error "JLinkGDBServerCL.exe not found in PATH. Please install J-Link software and ensure it's in your PATH."
    exit 1
}

# Check if JLink RTT Viewer is available
$RTTViewerPath = Get-Command "JLinkRTTViewer.exe" -ErrorAction SilentlyContinue
if (-not $RTTViewerPath) {
    Write-Error "JLinkRTTViewer.exe not found in PATH. Please install J-Link software and ensure it's in your PATH."
    exit 1
}

Write-Host "Starting JLink GDB Server..." -ForegroundColor Green
Write-Host "Target MCU: @TARGET_MCU_UPPER@" -ForegroundColor Cyan
Write-Host "GDB Port: @GDB_PORT@" -ForegroundColor Cyan

# Start JLink GDB Server in background
$JLinkArgs = @(
    "-device", "@TARGET_MCU_UPPER@",
    "-if", "SWD",
    "-speed", "auto",
    "-port", "@GDB_PORT@",
    "-silent",
    "-nogui"
)

$JLinkProcess = Start-Process -FilePath "JLinkGDBServerCL.exe" -ArgumentList $JLinkArgs -PassThru -WindowStyle Minimized
Write-Host "JLink GDB Server started with PID: $($JLinkProcess.Id)" -ForegroundColor Green

# Start JLink RTT Viewer with Terminal 0 configuration
# Configured for: Terminal 0 only, Send on input, Windows EOL, Echo disabled
Write-Host "Starting JLink RTT Viewer..." -ForegroundColor Green
$RTTViewerArgs = @(
    "-device", "@TARGET_MCU_UPPER@",
    "-if", "SWD",
    "-speed", "auto",
    "--rttrange", "20000000", "400",
    "-a",
    "-ti", "0"
)

Start-Process -FilePath "JLinkRTTViewer.exe" -ArgumentList $RTTViewerArgs

Write-Host ""
Write-Host "IMPORTANT: Configure JLink RTT Viewer manually:" -ForegroundColor Yellow
Write-Host "1. Input -> Sending... -> Send on Input" -ForegroundColor White
Write-Host "2. Input -> End of Line... -> Windows Format" -ForegroundColor White
Write-Host "3. Input -> Echo input... -> Disable both options" -ForegroundColor White
Write-Host ""

Write-Host "Development environment setup complete!" -ForegroundColor Green
Write-Host "JLink GDB Server is running on port @GDB_PORT@" -ForegroundColor Cyan
Write-Host "JLink RTT Viewer is connected and configured for Terminal 0" -ForegroundColor Cyan
Write-Host ""
Write-Host "To stop the JLink GDB Server, close this window or press Ctrl+C" -ForegroundColor Yellow

# Keep the script running so the JLink server stays active
try {
    Write-Host "Press Ctrl+C to stop the JLink GDB Server and exit..." -ForegroundColor Yellow
    while ($JLinkProcess -and -not $JLinkProcess.HasExited) {
        Start-Sleep -Seconds 1
    }

    if ($JLinkProcess.HasExited) {
        Write-Host "JLink GDB Server has exited." -ForegroundColor Red
    }
}
catch {
    Write-Host "Stopping JLink GDB Server..." -ForegroundColor Yellow
    if ($JLinkProcess -and -not $JLinkProcess.HasExited) {
        $JLinkProcess.Kill()
        Write-Host "JLink GDB Server stopped." -ForegroundColor Green
    }
}
